<nxthemes:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:nxthemes="http://nuxeo.org/nxthemes"
	xmlns:a4j="https://ajax4jsf.dev.java.net/ajax"
	xmlns:nxu="http://nuxeo.org/nxweb/util"
	xmlns:nxd="http://nuxeo.org/nxweb/document"
	xmlns:oh="http://osivia.org/html">

	<ui:define name="page title">
		<h:outputText
			value="#{nuxeoApplicationName} - #{messages['Recherche de document dans nuxeo']}" />
	</ui:define>

	<ui:define name="body">

		<div style="text-align: center; margin: 40px 0px">
			<h:form>
				<h:inputText value="#{editorLinkActions.searchKeywords}" size="40"
					class="searchField"
					onkeydown="if (event.keyCode == 13) {this.nextSibling.click()} else return true" />
				<h:commandButton value="#{messages['command.search']}"
					action="#{editorLinkActions.searchDocuments}" class="button" />
				<div style="margin-top: 20px">
					<h:outputText value="Rechercher dans " />
					<h:selectOneListbox value="#{editorLinkActions.scope}" size="1">
						<f:selectItems value="#{editorLinkActions.scopes}" />
						<a4j:support event="onchange" reRender="selecttype" />
					</h:selectOneListbox>
				</div>
				<div style="margin-top: 0px">
					<h:outputText value="Filtrer suivant le type " />
					<h:selectOneListbox value="#{editorLinkActions.typeDoc}" size="1"
						id="selecttype">
						<f:selectItems value="#{editorLinkActions.types}" />
					</h:selectOneListbox>
				</div>
			</h:form>
		</div>

		<div id="content">
			<h3>
				<h:outputText value="#{messages['label.search.results.keywords']}" />
			</h3>
			<h:outputText value="#{messages['label.content.emptyFolder']}"
				rendered="#{!editorLinkActions.hasSearchResults}" />
			<h:form id="search_results"
				rendered="#{editorLinkActions.hasSearchResults}">
				<h:selectOneRadio>
					<nxu:dataTable id="dataTable"
						value="#{editorLinkActions.searchDocumentResults}" var="document"
						rowClasses="dataRowEven,dataRowOdd" styleClass="dataOutput">
						<!-- id and selection -->
						<nxu:column styleClass="iconColumn">
							<input type="radio" id="selection" name="selection"
								value="#{document.id}" />
							<div style="display: none;" id="#{document.id}">
								<h:outputText value="#{document.dublincore.title}" />
							</div>
						</nxu:column>
						<!-- Icon + Type -->
						<nxu:column styleClass="iconColumn">
							<nxu:graphicImage value="#{nxd:iconPath(document)}"
								alt="#{document.type}" />
						</nxu:column>
						<!--  Title -->
						<nxu:column>
							<f:facet name="header">
								<h:outputText value="#{messages['label.content.header.title']}" />
							</f:facet>

							<h:outputLink value="#{oh:preferredLinkUrl(document)}" target="_blank" rendered="#{oh:hasWebId(document) eq true}">
								<h:outputText value="#{nxd:titleOrId(document)}" />
							</h:outputLink>
							
							<nxd:restDocumentLink document="#{document}"  rendered="#{oh:hasWebId(document) eq false}"
								newConversation="true" target="_blank">
								<h:outputText value="#{nxd:titleOrId(document)}" />
							</nxd:restDocumentLink>

						</nxu:column>
						<!--  Author -->
						<h:column>
							<f:facet name="header">
								<h:outputText value="#{messages['label.content.header.author']}" />
							</f:facet>
							<h:outputText value="#{document.dublincore.contributors[0]}" />
						</h:column>
						<!--  Path -->
						<h:column>
							<f:facet name="header">
								<h:outputText value="#{messages['label.content.header.path']}" />
							</f:facet>
							<h:outputText value="#{oh:preferredLinkUrl(document)}" />
						</h:column>
					</nxu:dataTable>
				</h:selectOneRadio>

				<script language="javascript">
          function getSelectedRadio(buttonGroup) {
            if (buttonGroup[0]) {
              for (var i=0; i&lt;buttonGroup.length; i++) {
                if (buttonGroup[i].checked) {
                  return buttonGroup[i]
                }
              }
            } else if (buttonGroup.checked) {
              return buttonGroup;
            }
            return null;
          }

          function getDocumentLink(radioButton) {
            if (radioButton) {
              var ele = radioButton.parentNode.nextSibling;
              while(ele != null) {
                for (var i = 0; i &lt; ele.childNodes.length; ++i) {
                  e = ele.childNodes[i];
                  if (e.nodeName == 'A' || e.nodeName == 'a') {
                    var docLink = e;
                    return docLink;
                  }
                }
                ele = ele.nextSibling;
              }
            }
            return null;
          }

          function updateEditor(form) {
            var button = getSelectedRadio(form.elements.selection);
            var docLink = getDocumentLink(button);

            
            if (docLink != null) {
              if (window.opener.FCK) {
                var FCK = window.opener.FCK;
                FCK.InsertElement(docLink);
              } 
              
              if (window.opener.tinyMCE) {
                var tinyMCE = window.opener.tinyMCE;
				var linkContent = docLink.childNodes[0].nodeValue;
				
				if(tinyMCE.activeEditor) {
			        var selectionContent = tinyMCE.activeEditor.selection.getContent();
					if(selectionContent != ""){
			                  linkContent = selectionContent;
					}
				}

				var html = '&lt;a href="' + docLink.href + '"&gt;' + linkContent + '&lt;/a&gt;';
				tinyMCE.execCommand('mceInsertContent', false, html);
              }
              
              // for fragment picture
              if (window.opener.$targetPath) {
                var targetPath = window.opener.$targetPath;

  				var relativeUrl = docLink.href.replace(/^(?:\/\/|[^\/]+)*\//, "/")
				
				targetPath.val(relativeUrl);
                }
              
            }
            self.close();
          }
        </script>
				<input type="submit" id="button_update" class="button"
					value="#{messages['command.ok']}"
					onclick="javascript:updateEditor(this.form);" />

			</h:form>
		</div>

	</ui:define>

</nxthemes:composition>